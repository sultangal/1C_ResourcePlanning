//TODO: Реализовать проверки дат периода на валидность
#Область ОписаниеПеременных
&НаКлиенте
Перем ПредыдущаяДатаНачалаОтпуска;
&НаКлиенте
Перем ПредыдущаяДатаОкончанияОтпуска;
#КонецОбласти
#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокСотрудников
&НаКлиенте
Процедура СписокСотрудниковДатаНачалаОтпускаПриИзменении(Элемент)
	ЗаполнитьПолеКоличествоДней(Элементы.СписокСотрудников.ТекущиеДанные,
		Элементы.СписокСотрудников.ТекущиеДанные.ДатаНачалаОтпуска, ПредыдущаяДатаНачалаОтпуска);
КонецПроцедуры

&НаКлиенте
Процедура СписокСотрудниковДатаОкончанияОтпускаПриИзменении(Элемент)
	ЗаполнитьПолеКоличествоДней(Элементы.СписокСотрудников.ТекущиеДанные,
		Элементы.СписокСотрудников.ТекущиеДанные.ДатаОкончанияОтпуска, ПредыдущаяДатаОкончанияОтпуска);
КонецПроцедуры

&НаКлиенте
Процедура СписокСотрудниковДатаНачалаОтпускаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	ПредыдущаяДатаНачалаОтпуска = Элементы.СписокСотрудников.ТекущиеДанные.ДатаНачалаОтпуска;
КонецПроцедуры

&НаКлиенте
Процедура СписокСотрудниковДатаНачалаОтпускаНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	ПредыдущаяДатаНачалаОтпуска = Элементы.СписокСотрудников.ТекущиеДанные.ДатаНачалаОтпуска;
КонецПроцедуры

&НаКлиенте
Процедура СписокСотрудниковДатаОкончанияОтпускаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	ПредыдущаяДатаОкончанияОтпуска = Элементы.СписокСотрудников.ТекущиеДанные.ДатаОкончанияОтпуска;
КонецПроцедуры

&НаКлиенте
Процедура СписокСотрудниковДатаОкончанияОтпускаНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением,
	СтандартнаяОбработка)
	ПредыдущаяДатаОкончанияОтпуска = Элементы.СписокСотрудников.ТекущиеДанные.ДатаОкончанияОтпуска;
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаКлиенте
Процедура ЗаполнитьПолеКоличествоДней(ТекущиеДанные, ДатаНачалаИлиОкончания, ПредыдущаяДата)
	//--Блок валидации дат--
	//Если пустое значение
	Если ДатаНачалаИлиОкончания = Дата('00010101') Тогда
		Возврат;
	КонецЕсли;
	
	//Если не заданы даты периода 
	Если Объект.НачалоПериода = Дата('00010101') Или Объект.КонецПериода = Дата('00010101') Тогда
		ПоказатьПредупреждение( , "Необходимо сперва задать даты периода!");
		ДатаНачалаИлиОкончания = Дата('00010101');
		Возврат;
	КонецЕсли;
	
	//Если дата не в пределах периода
	Если Не (ДатаНачалаИлиОкончания >= Объект.НачалоПериода И ДатаНачалаИлиОкончания <= Объект.КонецПериода) Тогда
		ПоказатьПредупреждение( , "Дата должна находится в пределах периода!");
		ДатаНачалаИлиОкончания = ПредыдущаяДата;
		Возврат;
	КонецЕсли;

	//Если одна из дат пустая
	Если ТекущиеДанные.ДатаНачалаОтпуска = Дата('00010101') Или ТекущиеДанные.ДатаОкончанияОтпуска = Дата('00010101') Тогда
		Возврат;
	КонецЕсли;
	
	//Если дата окончания и начала перепутаны местами
	Если ТекущиеДанные.ДатаОкончанияОтпуска < ТекущиеДанные.ДатаНачалаОтпуска Тогда
		ПоказатьПредупреждение( , "Окончание отпуска не должно начинаться раньше начала отпуска!");
		ДатаНачалаИлиОкончания = ПредыдущаяДата;
		Возврат;
	КонецЕсли;
	//----------------------------------------------------------------------------------------------------------------
	
	ТекущиеДанные.КоличествоДней = (НачалоДня(ТекущиеДанные.ДатаОкончанияОтпуска) - НачалоДня(
		ТекущиеДанные.ДатаНачалаОтпуска)) / (24 * 60 * 60);
КонецПроцедуры
#КонецОбласти