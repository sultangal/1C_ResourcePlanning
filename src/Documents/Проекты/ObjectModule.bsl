#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

////{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
//	//Данный фрагмент построен конструктором.
//	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!
//
//	// регистр ИсторияПроектов
//	Движения.ИсторияПроектов.Записывать = Истина;
//	Движение = Движения.ИсторияПроектов.Добавить();
//	Движение.НазваниеПроекта = НазваниеПроекта;
//	Движение.РуководительПроекта = РуководительПроекта;
//	Движение.ДатаНачала = ДатаНачала;
//	Движение.ДатаОкончания = ДатаОкончания;
//	Движение.Период = ТекущаяДатаСеанса();	
//	Движение.Идентификатор = Новый УникальныйИдентификатор(); 
//	Движения.ИсторияПроектов.Записать(Ложь);
//	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
////	СсылкаНаЗапись = Движение.НомерСтроки;
	
	
МенеджерЗаписи = РегистрыСведений.ИсторияПроектов.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.Проект = Ссылка;
	МенеджерЗаписи.НазваниеПроекта = НазваниеПроекта;
	МенеджерЗаписи.РуководительПроекта = РуководительПроекта;
	МенеджерЗаписи.ДатаНачала = ДатаНачала;
	МенеджерЗаписи.ДатаОкончания = ДатаОкончания;
	МенеджерЗаписи.Период = ТекущаяДатаСеанса();
	
	УникальныйИдентификатор = Новый УникальныйИдентификатор();	
	МенеджерЗаписи.ИдентификаторЗаписи = УникальныйИдентификатор; 	

МенеджерЗаписи.Записать();	


МенеджерЗаписи = РегистрыСведений.ИсторияСотрудниковНаПроекте.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.ИДЗаписиВИсторииПроектов = УникальныйИдентификатор;

МенеджерЗаписи.Записать();	
	


//НаборЗаписей = РегистрыСведений.ИсторияПроектов.СоздатьНаборЗаписей(); 
//    НаборЗаписей.Отбор.НазваниеПроекта.Установить(НазваниеПроекта);
//НаборЗаписей.Записать(); 

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти

#Иначе
  ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли