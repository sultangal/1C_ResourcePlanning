#Область ОбработчикиСобытийФормы
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПроверкаПересеченияСотрудникаСГрафикомОтпусков(Объект.ДатаНачала, Объект.ДатаОкончания);
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура РуководительПроектаНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	НастройкиКД = Новый НастройкиКомпоновкиДанных();
	Элемент = НастройкиКД.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	Элемент.Использование = Истина;
	Элемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Должность");
	Элемент.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Элемент.ПравоеЗначение = ВернутьСсылкуНаЗаписьРуководительПроекта();
	Элемент.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФиксированныеНастройки", НастройкиКД);
	
	ОткрытьФорму("Справочник.Сотрудники.ФормаВыбора", ПараметрыФормы, Элементы.РуководительПроекта);	
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКомандаПроекта
&НаКлиенте
Процедура КомандаПроектаСотрудникОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, ВыборДобавлением, СтандартнаяОбработка)
//	Если  Тогда
//		ПоказатьПредупреждение(,"Отпуск сотрудника пересекается с проектом!",,);
//	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ПроверкаПересеченияСотрудникаСГрафикомОтпусков(НачалоПроекта, КонецПроекта)
	
	//Запрос к документу График Отпусков
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ГрафикОтпусков.НачалоПериода КАК НачалоПериода,
		|	ГрафикОтпусков.КонецПериода КАК КонецПериода
		|ИЗ
		|	Документ.ГрафикОтпусков КАК ГрафикОтпусков";
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	НачалоПериода = ВыборкаДетальныеЗаписи.НачалоПериода;
	КонецПериода = ВыборкаДетальныеЗаписи.КонецПериода;
	
	//Запрос к регистру История Графика Отпусков
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ИсторияГрафикаОтпусковСрезПоследних.НачалоПериода,
		|	ИсторияГрафикаОтпусковСрезПоследних.КонецПериода,
		|	ИсторияГрафикаОтпусковСрезПоследних.Сотрудник,
		|	ИсторияГрафикаОтпусковСрезПоследних.ДатаНачалаОтпуска,
		|	ИсторияГрафикаОтпусковСрезПоследних.КоличествоДней КАК КоличествоДней
		|ИЗ
		|	РегистрСведений.ИсторияГрафикаОтпусков.СрезПоследних КАК ИсторияГрафикаОтпусковСрезПоследних
		|ГДЕ
		|	ИсторияГрафикаОтпусковСрезПоследних.НачалоПериода = &НачалоПериода
		|	И ИсторияГрафикаОтпусковСрезПоследних.КонецПериода = &КонецПериода";
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	РезультатЗапроса = Запрос.Выполнить();
	ТаблГрафикОтпусков = РезультатЗапроса.Выгрузить();

	//Проверяем пересечения сотрудника в табл части с графиком отпусков
	Для Каждого СтрокаТЧ Из Объект.КомандаПроекта Цикл
		Для Каждого Запись Из ТаблГрафикОтпусков Цикл
			
			Если НЕ СтрокаТЧ.Сотрудник = Запись.Сотрудник Тогда
				Продолжить;
			КонецЕсли;
			
			НачалоОтпуска = Запись.ДатаНачалаОтпуска;
			КонецОтпуска = Запись.ДатаНачалаОтпуска + Запись.КоличествоДней * 86400;
	
			Если (НачалоПроекта <= КонецОтпуска И КонецПроекта >= НачалоОтпуска) Тогда
				СтрокаТЧ.ПересекаетсяЛиСГрафикомОтпусков = Истина;
			Иначе
				СтрокаТЧ.ПересекаетсяЛиСГрафикомОтпусков = Ложь;
			КонецЕсли;
						
		КонецЦикла;		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ВернутьСсылкуНаЗаписьРуководительПроекта()
    Возврат Справочники.Должности.РуководительПроекта;
КонецФункции
#КонецОбласти